<html>
<head>
<meta charset="UTF-8">
<title><%= title %></title>
<link href="http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.css" rel="stylesheet" type="text/css">
<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
<script src="http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.js"></script>
</head>
<body>
<div data-role="page" id="mainMenuPage">
  <div data-role="header">
    <h1><%= title %></h1>
  </div>
  <div data-role="content">
    <div data-role="controlgroup">
        <a href="#uploadInvoicePage" data-role="button">Upload Invoice</a>
        <a href="#metroViewPage" data-role="button" id="mainMenuMetroButton">View Data</a>
        <a href="#aboutPage" data-role="button">About</a>
    </div>
  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>
<!-- Page Break -->
<!-- Start of Upload Invoice Page -->
<div data-role="page" id="uploadInvoicePage">
  <div data-role="header">
	<a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Header</h1>
  </div>
  <div data-role="content">
    <div data-role="fieldcontain">
      <label for="textinput">Text Input:</label>
      <input type="text" name="textinput" id="textinput" value=""  />
    </div>
    <div data-role="fieldcontain">
      <label for="textinput">Text Input:</label>
      <input type="text" name="textinput" id="textinput" value=""  />
    </div>
  Content </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>
<!-- Page Break -->

<div data-role="page" id="cities">
  <div data-role="header">
  <a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Cities</h1>
  </div>
  <div data-role="content">
    <h1 id="citiesTitle">Cities</h1><hr>
    <div id="citiesList">

    </div>
  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>

<div data-role="page" id="locationsPage">
  <div data-role="header">
  <a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Locations</h1>
  </div>
  <div data-role="content">
    <h1 id="retailLocationsTitle">Retail Locations</h1><hr>
    <div id="locationList">

    </div>
  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>

<div data-role="page" id="projectsPage">
  <div data-role="header">
  <a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Projects</h1>
  </div>
  <div data-role="content">
    <h1 id="projectsTitle">Projects</h1><hr>
    <div id="projectsList">

    </div>
  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>


<!-- About page -->

<div data-role="page" id="aboutPage">
  <div data-role="header">
  <a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Header</h1>
  </div>
  <div data-role="content">
    Content
  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>
<!-- Start of Invoice Management Page -->
<div data-role="page" id="metroViewPage">
  <div data-role="header">
	<a href="#mainMenuPage" data-role="button" data-icon="back">Back</a>
    <h1>Metropolitan</h1>
    
  </div>
  <div data-role="content">
  	<h1>Metropolitan Areas</h1>
    <hr>
    
    <div id="invoiceItems">

  </div>
  <div data-role="footer">
    <h4>Footer</h4>
  </div>
</div>
<!-- Start of Invoice Management Page -->

</body>


<!-- End of cities page -->


<script type="text/javascript">
// This script loads data into a Metropolitan class, and then renders it to the view when the mainMenuMetro button is pushed
var metroItems = [];
class Metropolitan {
  constructor (name, id, cities, population) {
      this.name = name;
      this.id = id;
      this.cities = cities;
      this.population = population;
  }
}
  $('#mainMenuMetroButton').click(function(){
      $.get("/metropolitan", function(data, status){
         // Load data into variables
        var html = '';
        for (var i=0; i < data.length; i++) {
            var metroItemToInsert = new Metropolitan(data[i].name, data[i].id, data[i].cities, data[i].population);
            metroItems.push(metroItemToInsert);
            html +=  '<div onclick="getItemMetroName(this);"><h2 id="metroName">' + metroItemToInsert.name + '</h2>';
            html += '<h3 id="metroCities">Cities: ' + metroItemToInsert.cities + '</h3>';
            html += '<h3 id="metroPopulation">Population: ' + metroItemToInsert.population + '</h3><hr></div>';

        }
        $('#invoiceItems').html(html);
    });
  });
</script>

<script type="text/javascript">

function getItemMetroName(item) {
    // This will get the name of the html Metropolitan item clicked
   var metroItemName = $(item).children("#metroName").html();
   sendMetroItemsAJAXRequest(metroItemName);
}

function getCityName(item) {
      // This will get the name of the html Metropolitan item clicked
    var cityItemName = $(item).children("#cityName").html();
    sendLocationAJAXRequest(cityItemName);
    
} 

function getLocationName(item) {
      // This will get the name of the html Metropolitan item clicked
    var locationItemName = $(item).html();
    //console.log(locationItemName)
    sendProjectAJAXRequest(locationItemName);
} 

function sendMetroItemsAJAXRequest(metroItemName) {
  $.ajax({
       url: "/city",
       type: "GET",
       data: {metropolitan: metroItemName},
       contentType: "text/plain",
       dataType: "json",
       processData: true, // avoid the data being parsed to query string params
       success: onMetroSuccess
       //error: onError
    });

    function onMetroSuccess(data, status){
      var cityItems = [];
      class City{
        constructor (name, id, metropolitan, population, surfaceArea, retailLocations) {
            this.name = name;
            this.id = id;
            this.metropolitan = metropolitan;
            this.population = population;
            this.surfaceArea = surfaceArea;
            this.retailLocations = retailLocations;
        }
      }
      var html = '';
      for (var i= 0; i < data.length; i++) {
            var cityItemToInsert = new City(data[i].name, data[i].id, data[i].metropolitan, data[i].population, data[i].surfaceArea, data[i].retailLocations);
            cityItems.push(cityItemToInsert);
            //console.log(cityItemToInsert);
            html +=  '<div onclick="getCityName(this);"><h2 id="cityName">' + cityItemToInsert.name + '</h2>';
            html += '<h3 id="cityPopulation">Population: ' + cityItemToInsert.population + '</h3>';
            html += '<h3 id="citySurfaceArea">SurfaceArea: ' + cityItemToInsert.surfaceArea + '</h3></div>';
            html += '<h3 id="retailLocations">Retail Locations: ' + cityItemToInsert.retailLocations + '</h3><hr></div>';
      }
    // Display info to new page
      $('#citiesTitle').html('<h1 id="citiesTitle">Cities in ' + data[0].metropolitan + '</h1>');
      $('#citiesList').html(html);
    }

   // Go to new the new view
   $(location).attr('href', 'http://localhost:3000/#cities')
}
</script>
<script type="text/javascript">
function sendLocationAJAXRequest(locationItemCity) {

    
     $.ajax({
       url: "/location",
       type: "GET",
       data: {city: locationItemCity},
       contentType: "text/plain",
       dataType: "json",
       processData: true, // avoid the data being parsed to query string params
       success: onLocationSuccess
       //error: onError
    });

     function onLocationSuccess(data, status){
      var locationItems = [];
      //console.log(data)
      html = '';
      for (var i= 0; i < data.length; i++) {
            //var locationItemToInsert = new Location(data[i].key, data[i].id, data[i].footTraffic, data[i].population, data[i].address, data[i].city);
            //locationItems.push(locationItemToInsert);
            //console.log(locationItemToInsert);
            html +=  '<div><h2>Location: <span onclick="getLocationName(this);" id="locationName">' + data[i].name + '</span></h2>';
            html += '<h3 id="locationAddress">Address: ' + data[i].address + '</h3></div>';
            html += '<h3 id="locationFootTraffic">Foot Traffic: ' + data[i].footTraffic + '</h3></div>';
      }
      //console.log(html);
      $('#locationList').html(html);
      $('#retailLocationsTitle').html('<h1 id="retailLocationsTitle">' + data[0].city + ' Retail Locations</h1>');
      $(location).attr('href', 'http://localhost:3000/#locationsPage');
    }
}

function sendProjectAJAXRequest(projectItemLocation){
  //console.log(projectItemLocation)
    $.ajax({
       url: "/project",
       type: "GET",
       data: {city: projectItemLocation},
       contentType: "text/plain",
       dataType: "json",
       processData: true, // avoid the data being parsed to query string params
       success: onProjectSuccess
       //error: onError
    });
}

function onProjectSuccess(data, status){
      var locationItems = [];
      console.log(data)
      html = '';
      for (var i= 0; i < data.length; i++) {
            //var locationItemToInsert = new Location(data[i].key, data[i].id, data[i].footTraffic, data[i].population, data[i].address, data[i].city);
            //locationItems.push(locationItemToInsert);
            //console.log(locationItemToInsert);
            html +=  '<div onclick="getLocationName(this);"><h2>Project Name: <span id="locationName">' + data[i].name + '</span></h2>';
            html += '<h3 id="projectManager">Project Manager: ' + data[i].projectManager + '</h3></div>';
            html += '<h3 id="projectStartDate">Project Start Date: ' + data[i].projectStartDate + '</h3></div>';
            html += '<h3 id="projectEndDate">Project End Date: ' + data[i].projectEndDate + '</h3></div>';
      }
      //console.log(html);
      $('#projectsList').html(html);
      $('#projectsTitle').html('<h1 id="projectsTitle">' + data[0].retailLocation + ' Projects</h1>');
      $(location).attr('href', 'http://localhost:3000/#projectsPage');
    }


</script>
</html>

